services:
  langfuse:
    image: ghcr.io/langfuse/langfuse:2.44
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/langfuse
      - NEXTAUTH_SECRET=mysecret
      - SALT=mysalt
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-false}
      - NEXT_PUBLIC_SIGN_UP_DISABLED=${NEXT_PUBLIC_SIGN_UP_DISABLED:-false}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}

  db:
    image: postgres:16.3-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./postgresql-init-script:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack:7.2.0-v10
    restart: always
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis_data:/data

  presidio-analyzer:
    image: mcr.microsoft.com/presidio-analyzer
    restart: always
    ports:
      - "5001:3000"

  presidio-anonymizer:
    image: mcr.microsoft.com/presidio-anonymizer
    restart: always
    ports:
      - "5002:3000"

volumes:
  database_data:
    driver: local
  redis_data:
    driver: local
